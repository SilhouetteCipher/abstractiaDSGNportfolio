---
import Layout from '../layouts/Layout.astro';
import ModelCard from '../components/ModelCard.astro';

let modelData = { models: [] };
try {
  const data = await import('../../../patron_models.json');
  modelData = data.default || data;
} catch (e) {
  console.warn('patron_models.json not found or empty');
}

const allModels = modelData.models || [];
// Sort models by added_date in descending order (newest first)
const sortedModels = [...allModels].sort((a, b) => {
  const dateA = new Date(a.added_date || 0);
  const dateB = new Date(b.added_date || 0);
  return dateB.getTime() - dateA.getTime();
});
const featuredModels = sortedModels.slice(0, 6);
---

<Layout title="Abstractia Design - Premium 3D Models">
  <!-- Hero Section - Smaller -->
  <section class="py-16 px-6 bg-white border-b-2 border-black">
    <div class="max-w-7xl mx-auto">
      <div class="grid grid-cols-1 lg:grid-cols-4 gap-12 items-center">
        <div class="refined-slide-up lg:col-span-3">
          <h1 class="refined-title mb-6 refined-reveal">
            <span class="refined-outline">ABSTRACTIA</span><br/>
            DESIGN
          </h1>
          <h2 class="text-xl leading-relaxed mb-8 text-gray-700">
 
            New Model, Every Day. Designed by Me for Your Store.<br>
            A Single Subscription For an Ever Expanding Collection.<br>
            <a href="/patreon">Get Your License and Start Selling Today!</a>
        
          </h2>
          <a href={`${import.meta.env.BASE_URL.replace(/\/$/, '')}/models`}
             class="refined-button">
            <span>View Portfolio</span>
          </a>
        </div>
        
        <div class="text-right">
          <div class="refined-number refined-outline">
            {allModels.length.toString().padStart(2, '0')}
          </div>
          <div class="text-sm uppercase tracking-widest text-gray-600 mt-4">
            Models Available
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- All Models with Filters -->
  <section class="py-20 px-6">
    <div class="max-w-7xl mx-auto">
      <!-- Filters -->
      <div class="mb-12 pb-8 border-b border-gray-300">
        <div class="flex flex-col md:flex-row gap-6 items-center justify-between">
          <div class="flex flex-col sm:flex-row gap-4">
            <select id="typeFilter" class="border-2 border-black px-4 py-2 bg-white font-medium">
              <option value="">All Categories</option>
              {[...new Set(allModels.map(m => m.type))].sort().map(type => (
                <option value={type}>{type}</option>
              ))}
            </select>
            
            <select id="sortFilter" class="border-2 border-black px-4 py-2 bg-white font-medium">
              <option value="newest">Newest First</option>
              <option value="oldest">Oldest First</option>
              <option value="name-asc">Name A-Z</option>
              <option value="name-desc">Name Z-A</option>
            </select>
          </div>
          
          <div id="resultsSummary" class="text-sm font-medium uppercase tracking-wide">
            Showing {allModels.length} Models
          </div>
        </div>
      </div>
      
      <!-- Models Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8" id="modelsGrid">
        {sortedModels.map((model, index) => (
          <div class="model-card" data-type={model.type} data-name={model.name.toLowerCase()} data-added={model.added_date}>
            <ModelCard model={model} index={sortedModels.length - index - 1} />
          </div>
        ))}
      </div>

      <!-- No Results -->
      <div id="noResults" class="text-center py-20 hidden">
        <div class="refined-card p-12 max-w-md mx-auto">
          <div class="text-6xl font-black mb-4 refined-outline opacity-30">∅</div>
          <h3 class="text-xl font-bold mb-4">No Models Found</h3>
          <p class="text-gray-600 mb-6 leading-relaxed">
            Adjust your filters to discover models from our collection.
          </p>
          <button onclick="clearFilters()" class="refined-button">
            <span>Reset Filters</span>
          </button>
        </div>
      </div>
    </div>
  </section>

  <!-- Connect Section -->
  <section class="py-20 px-6 bg-black text-white">
    <div class="max-w-7xl mx-auto">
      <div class="text-center mb-16">
        <h2 class="refined-subtitle mb-8 text-white">
          Connect & <span class="refined-outline-white">Support</span>
        </h2>
        <p class="text-lg text-gray-300 max-w-2xl mx-auto">
          Join our community and support the creation of new 3D models
        </p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
        <!-- Patreon -->
        <a href="https://www.patreon.com/AbstractiaDSGN" target="_blank" rel="noopener noreferrer" 
           class="border border-white p-8 text-center group hover:bg-white hover:text-black transition-all duration-300">
          <div class="w-16 h-16 mb-4 mx-auto social-icon-gradient">
            <svg viewBox="0 0 24 24">
              <defs>
                <linearGradient id="gradient-patreon" x1="0%" y1="0%" x2="100%" y2="100%">
                  <stop offset="0%" style="stop-color:#fb923c">
                    <animate attributeName="stop-color" values="#fb923c;#fdba74;#f9a8d4;#67e8f9;#5eead4;#fb923c" dur="20s" repeatCount="indefinite" />
                  </stop>
                  <stop offset="50%" style="stop-color:#f9a8d4">
                    <animate attributeName="stop-color" values="#f9a8d4;#67e8f9;#5eead4;#fb923c;#fdba74;#f9a8d4" dur="20s" repeatCount="indefinite" />
                  </stop>
                  <stop offset="100%" style="stop-color:#5eead4">
                    <animate attributeName="stop-color" values="#5eead4;#fb923c;#fdba74;#f9a8d4;#67e8f9;#5eead4" dur="20s" repeatCount="indefinite" />
                  </stop>
                </linearGradient>
              </defs>
              <path fill="url(#gradient-patreon)" d="M15.386.524c-4.764 0-8.64 3.876-8.64 8.64 0 4.75 3.876 8.613 8.64 8.613 4.75 0 8.614-3.864 8.614-8.613C24 4.4 20.136.524 15.386.524M.003 23.537h4.22V.524H.003"/>
            </svg>
          </div>
          <h3 class="text-xl font-bold mb-3">Patreon</h3>
          <p class="text-gray-300 group-hover:text-gray-700 mb-4">
            Support & get exclusive models
          </p>
          <div class="text-lg font-black group-hover:translate-x-1 transition-transform">
            →
          </div>
        </a>
        
        <!-- MakerWorld -->
        <a href="https://makerworld.com/en/@dkdsgn" target="_blank" rel="noopener noreferrer" 
           class="border border-white p-8 text-center group hover:bg-white hover:text-black transition-all duration-300">
          <div class="w-16 h-16 mb-4 mx-auto social-icon-gradient">
            <svg viewBox="0 0 24 24">
              <defs>
                <linearGradient id="gradient-maker" x1="0%" y1="0%" x2="100%" y2="100%">
                  <stop offset="0%" style="stop-color:#fb923c">
                    <animate attributeName="stop-color" values="#fb923c;#fdba74;#f9a8d4;#67e8f9;#5eead4;#fb923c" dur="20s" repeatCount="indefinite" />
                  </stop>
                  <stop offset="50%" style="stop-color:#f9a8d4">
                    <animate attributeName="stop-color" values="#f9a8d4;#67e8f9;#5eead4;#fb923c;#fdba74;#f9a8d4" dur="20s" repeatCount="indefinite" />
                  </stop>
                  <stop offset="100%" style="stop-color:#5eead4">
                    <animate attributeName="stop-color" values="#5eead4;#fb923c;#fdba74;#f9a8d4;#67e8f9;#5eead4" dur="20s" repeatCount="indefinite" />
                  </stop>
                </linearGradient>
              </defs>
              <path fill="url(#gradient-maker)" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-13h2v6h-2zm0 8h2v2h-2z"/>
              <path fill="url(#gradient-maker)" d="M12 6l-4 6h3v6l4-6h-3z"/>
            </svg>
          </div>
          <h3 class="text-xl font-bold mb-3">MakerWorld</h3>
          <p class="text-gray-300 group-hover:text-gray-700 mb-4">
            Browse free models
          </p>
          <div class="text-lg font-black group-hover:translate-x-1 transition-transform">
            →
          </div>
        </a>
        
        <!-- YouTube -->
        <a href="https://www.youtube.com/@abstractiadsgn" target="_blank" rel="noopener noreferrer" 
           class="border border-white p-8 text-center group hover:bg-white hover:text-black transition-all duration-300">
          <div class="w-16 h-16 mb-4 mx-auto social-icon-gradient">
            <svg viewBox="0 0 24 24">
              <defs>
                <linearGradient id="gradient-youtube" x1="0%" y1="0%" x2="100%" y2="100%">
                  <stop offset="0%" style="stop-color:#fb923c">
                    <animate attributeName="stop-color" values="#fb923c;#fdba74;#f9a8d4;#67e8f9;#5eead4;#fb923c" dur="20s" repeatCount="indefinite" />
                  </stop>
                  <stop offset="50%" style="stop-color:#f9a8d4">
                    <animate attributeName="stop-color" values="#f9a8d4;#67e8f9;#5eead4;#fb923c;#fdba74;#f9a8d4" dur="20s" repeatCount="indefinite" />
                  </stop>
                  <stop offset="100%" style="stop-color:#5eead4">
                    <animate attributeName="stop-color" values="#5eead4;#fb923c;#fdba74;#f9a8d4;#67e8f9;#5eead4" dur="20s" repeatCount="indefinite" />
                  </stop>
                </linearGradient>
              </defs>
              <path fill="url(#gradient-youtube)" d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
            </svg>
          </div>
          <h3 class="text-xl font-bold mb-3">YouTube</h3>
          <p class="text-gray-300 group-hover:text-gray-700 mb-4">
            Watch design process
          </p>
          <div class="text-lg font-black group-hover:translate-x-1 transition-transform">
            →
          </div>
        </a>
        
        <!-- Instagram -->
        <a href="https://www.instagram.com/abstractiadsgn/" target="_blank" rel="noopener noreferrer" 
           class="border border-white p-8 text-center group hover:bg-white hover:text-black transition-all duration-300">
          <div class="w-16 h-16 mb-4 mx-auto social-icon-gradient">
            <svg viewBox="0 0 24 24">
              <defs>
                <linearGradient id="gradient-instagram" x1="0%" y1="0%" x2="100%" y2="100%">
                  <stop offset="0%" style="stop-color:#fb923c">
                    <animate attributeName="stop-color" values="#fb923c;#fdba74;#f9a8d4;#67e8f9;#5eead4;#fb923c" dur="20s" repeatCount="indefinite" />
                  </stop>
                  <stop offset="50%" style="stop-color:#f9a8d4">
                    <animate attributeName="stop-color" values="#f9a8d4;#67e8f9;#5eead4;#fb923c;#fdba74;#f9a8d4" dur="20s" repeatCount="indefinite" />
                  </stop>
                  <stop offset="100%" style="stop-color:#5eead4">
                    <animate attributeName="stop-color" values="#5eead4;#fb923c;#fdba74;#f9a8d4;#67e8f9;#5eead4" dur="20s" repeatCount="indefinite" />
                  </stop>
                </linearGradient>
              </defs>
              <path fill="url(#gradient-instagram)" d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zM5.838 12a6.162 6.162 0 1 1 12.324 0 6.162 6.162 0 0 1-12.324 0zM12 16a4 4 0 1 1 0-8 4 4 0 0 1 0 8zm4.965-10.405a1.44 1.44 0 1 1 2.881.001 1.44 1.44 0 0 1-2.881-.001z"/>
            </svg>
          </div>
          <h3 class="text-xl font-bold mb-3">Instagram</h3>
          <p class="text-gray-300 group-hover:text-gray-700 mb-4">
            Daily updates
          </p>
          <div class="text-lg font-black group-hover:translate-x-1 transition-transform">
            →
          </div>
        </a>
      </div>
    </div>
  </section>

</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const typeFilter = document.getElementById('typeFilter') as HTMLSelectElement;
    const sortFilter = document.getElementById('sortFilter') as HTMLSelectElement;
    const modelCards = document.querySelectorAll('.model-card') as NodeListOf<HTMLElement>;
    const noResults = document.getElementById('noResults') as HTMLElement;
    const resultsSummary = document.getElementById('resultsSummary') as HTMLElement;
    const modelsGrid = document.getElementById('modelsGrid') as HTMLElement;

    let allCards = Array.from(modelCards);

    function updateResults() {
      const selectedType = typeFilter.value;
      const selectedSort = sortFilter.value;
      
      // Filter cards
      let visibleCards = allCards.filter(card => {
        const cardType = card.getAttribute('data-type');
        return selectedType === '' || cardType === selectedType;
      });

      // Sort cards
      visibleCards.sort((a, b) => {
        const aName = a.getAttribute('data-name') || '';
        const bName = b.getAttribute('data-name') || '';
        const aDate = new Date(a.getAttribute('data-added') || 0);
        const bDate = new Date(b.getAttribute('data-added') || 0);
        
        switch(selectedSort) {
          case 'name-asc':
            return aName.localeCompare(bName);
          case 'name-desc':
            return bName.localeCompare(aName);
          case 'oldest':
            return aDate.getTime() - bDate.getTime();
          case 'newest':
          default:
            return bDate.getTime() - aDate.getTime();
        }
      });

      // Update DOM
      allCards.forEach(card => card.style.display = 'none');
      visibleCards.forEach(card => card.style.display = 'block');

      // Reorder visible cards in grid
      visibleCards.forEach(card => {
        modelsGrid.appendChild(card);
      });

      // Update summary and no results
      const count = visibleCards.length;
      if (count === 0) {
        noResults.classList.remove('hidden');
        resultsSummary.textContent = 'No models found';
      } else {
        noResults.classList.add('hidden');
        const categoryText = selectedType ? ` in ${selectedType}` : '';
        resultsSummary.textContent = `Showing ${count} model${count !== 1 ? 's' : ''}${categoryText}`;
      }
    }

    // Global function for clear filters button
    (window as any).clearFilters = function() {
      typeFilter.value = '';
      sortFilter.value = 'newest';
      updateResults();
    };

    typeFilter.addEventListener('change', updateResults);
    sortFilter.addEventListener('change', updateResults);
    
    // Initialize
    updateResults();
  });
</script>